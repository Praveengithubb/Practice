package com.qspider.test;

public class findProduct {
	public static int[] find(int[] nums) {
		
		int[] res=new int[nums.length];
		int left=1;
		int right=1;
		for(int i=0;i<nums.length;i++)
		{
			res[i]=left;
			left=left*nums[i];
		}
		
		for(int i=nums.length-1;i>=0;i--)
		{
			res[i]=res[i]*right;
			right=right*nums[i];
			
		}
		return res;
	}
}
package com.qspider.test;

import static org.junit.Assert.*;

import org.junit.Test;

public class Testinggg {

	@Test
	public void test() {
		int[] nums = { -1, 1, 0, -3, 3 };
		findProduct f = new findProduct();
		int[] res = f.find(nums);
		int[] c = { 0, 0, 9, 0, 0 };
		assertArrayEquals(c, res);

	}

	@Test
	public void test1() {
		int[] nums = { 1, 2, 3, 4 };
		findProduct f = new findProduct();
		int[] res = f.find(nums);
		int[] c = { 24, 12, 8, 6 };
		assertArrayEquals(c, res);
	}

	@Test
	public void test2() {
		int[] nums = { -1, -2, -3, -4 };
		findProduct f = new findProduct();
		int[] res = f.find(nums);
		int[] c = { -24, -12, -8, -6 };
		assertArrayEquals(c, res);
	}
}
